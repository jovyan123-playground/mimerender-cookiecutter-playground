name: CI

on:
  push:
    branches: '*'
  pull_request:
    branches: '*'
  schedule:
    - cron: '0 0 * * *'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install node
      uses: actions/setup-node@v2
      with:
       node-version: '14.x'
    - name: Install Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'
        architecture: 'x64'
    - name: Install dependencies
      run: |
        python -m pip install jupyterlab~=3.0
        python -m pip install cookiecutter

    - name: Create pure frontend extension
      run: |
        cookiecutter . --no-input
        pushd myextension
        pip install -e .
        jupyter labextension develop . --overwrite
        jlpm run eslint:check
        jupyter labextension list 1>labextensions 2>&1
        cat labextensions
        cat labextensions | grep "myextension.*OK"
        python -m jupyterlab.browser_check
        jlpm run install:extension
        jupyter labextension build .

        pip install build
        python -m build --sdist
        cp dist/*.tar.gz ../myextension.tar.gz
        pip uninstall -y myextension jupyterlab
        popd
        rm -rf myextension

    - uses: actions/upload-artifact@v2
      with:
        name: myextension-sdist
        path: myextension.tar.gz

  test_isolated:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Install Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.7'
        architecture: 'x64'
    - name: Setup pip cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: pip-3.7-${{ hashFiles('package.json') }}
        restore-keys: |
          pip-3.7-
          pip-
    - uses: actions/download-artifact@v2
      with:
        name: myextension-sdist
    - name: Install and Test
      run: |
        set -eux
        # Remove NodeJS, twice to take care of system and locally installed node versions.
        sudo rm -rf $(which node)
        sudo rm -rf $(which node)
        pip install myextension.tar.gz
        pip install jupyterlab
        jupyter labextension list 2>&1 | grep -ie "myextension.*OK"
        python -m jupyterlab.browser_check --no-chrome-test
